name: Build theme for OpenWRT

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build theme for OpenWRT ${{ matrix.version }} using ${{ matrix.lunch }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        lunch:
          - netgear_r6020
        version:
          - main
          - v24.10.2

    steps:
      - name: Restore cache of OpenWRT builder if it exists
        id: restore-cache
        uses: actions/cache/restore@v3
        with:
          path: openwrt-builder
          key: ${{ runner.os }}-${{ matrix.version }}-${{ matrix.lunch }}-material3

      - name: Check if the OpenWRT builder exists
        id: check
        run: |
          if [ ! -d "openwrt-builder/.git" ]; then
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            echo "exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Clone the OpenWRT builder
        if: steps.check.outputs.exists == 'false'
        uses: actions/checkout@v4
        with:
          path: openwrt-builder
          repository: JoshuaDoes/openwrt-builder

      - name: Clone theme into themes feed
        if: steps.check.outputs.exists == 'false'
        uses: actions/checkout@v4
        with:
          path: openwrt-builder/feeds/themes/luci-theme-material3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk \
            gcc-multilib gettext libncurses-dev libssl-dev python3-setuptools \
            rsync unzip zlib1g-dev file wget python3 python3-pip libelf-dev ccache \
            qemu-utils

      - name: Build theme
        run: |
          set +e
          cd openwrt-builder
          git pull
          cp -R .github/workflows/openwrt-build/* .
          . build/envsetup
          sync "${{ matrix.version }}"
          lunch "${{ matrix.lunch }}"
          sync
          package luci-theme-material3
          pkg="$(ls $OUTPKG/themes/luci-theme-material3*)"
          name="$(basename $pkg)"
          {
            echo "pkg=$pkg"
            echo "name=$name"
          } >> $GITHUB_ENV
          cd ..

      - name: Upload theme artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.name }}
          path: ${{ env.pkg }}
          compression-level: 0
          if-no-files-found: error

      - name: Clean outputs
        run: |
          set +e
          cd openwrt-builder
          . build/envsetup
          clean
          cd ..

      - name: Save OpenWRT builder cache
        uses: actions/cache/save@v3
        with:
          path: openwrt-builder
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
